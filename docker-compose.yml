# WordPress + MariaDB optimized for Coolify
# Improved stability, security and performance
# Repository: https://github.com/jaz-on/wp-coolify
services:
  wordpress:
    image: 'wordpress:latest'
    volumes:
      - 'wordpress-files:/var/www/html'
      - './uploads.ini:/usr/local/etc/php/conf.d/uploads.ini'
    environment:
      - SERVICE_FQDN_WORDPRESS
      - WORDPRESS_DB_HOST=mariadb
      - WORDPRESS_DB_USER=$SERVICE_USER_WORDPRESS
      - WORDPRESS_DB_PASSWORD=$SERVICE_PASSWORD_WORDPRESS
      - WORDPRESS_DB_NAME=wordpress
      # Configuration Ã©tendue pour corriger l'API REST
      - WORDPRESS_CONFIG_EXTRA=define('WP_DEBUG', false); define('WP_DEBUG_LOG', false); define('WP_DEBUG_DISPLAY', false); if (!function_exists('wp_fix_rest_api_auth')) { function wp_fix_rest_api_auth() { add_filter('determine_current_user', function($user_id) { if ($user_id || !empty($_SERVER['PHP_AUTH_USER'])) { return $user_id; } $header = null; if (isset($_SERVER['HTTP_AUTHORIZATION'])) { $header = $_SERVER['HTTP_AUTHORIZATION']; } elseif (isset($_SERVER['REDIRECT_HTTP_AUTHORIZATION'])) { $header = $_SERVER['REDIRECT_HTTP_AUTHORIZATION']; } elseif (function_exists('apache_request_headers')) { $headers = apache_request_headers(); if (isset($headers['Authorization'])) { $header = $headers['Authorization']; } } return $user_id; }, 20); add_action('rest_api_init', function() { header('Access-Control-Allow-Headers: Authorization, X-WP-Nonce, Content-Type, Accept, Origin, X-Requested-With', false); header('Access-Control-Allow-Credentials: true', false); }); } add_action('init', 'wp_fix_rest_api_auth'); }
    depends_on:
      - mariadb
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - 'http://127.0.0.1/wp-admin/install.php'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
  mariadb:
    image: 'mariadb:lts'
    volumes:
      - 'mariadb-data:/var/lib/mysql'
    environment:
      - MYSQL_ROOT_PASSWORD=$SERVICE_PASSWORD_ROOT
      - MYSQL_DATABASE=wordpress
      - MYSQL_USER=$SERVICE_USER_WORDPRESS
      - MYSQL_PASSWORD=$SERVICE_PASSWORD_WORDPRESS
      - MARIADB_AUTO_UPGRADE=1
      - MARIADB_DISABLE_UPGRADE_BACKUP=1
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3
    healthcheck:
      test:
        - CMD
        - healthcheck.sh
        - '--connect'
        - '--innodb_initialized'
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 60s
  wordpress-cli:
    image: 'wordpress:cli'
    user: '33'
    volumes:
      - 'wordpress-files:/var/www/html'
    environment:
      - WORDPRESS_DB_HOST=mariadb
      - WORDPRESS_DB_USER=$SERVICE_USER_WORDPRESS
      - WORDPRESS_DB_PASSWORD=$SERVICE_PASSWORD_WORDPRESS
      - WORDPRESS_DB_NAME=wordpress
    depends_on:
      - wordpress
      - mariadb
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3
    entrypoint: ['tail', '-f', '/dev/null']
volumes:
  wordpress-files:
  mariadb-data:
networks:
  default:
    name: $COOLIFY_NETWORK_NAME
    external: true
